import matplotlib.pyplot as plt

# DJT-RS算法的数据
data_djt_rs = [0.85, 0.69, 0.74, 0.78, 0.84, 0.74, 0.74, 0.82, 0.75, 0.79, 0.80, 0.756, 0.76, 0.755, 0.757, 0.781, 0.751, 0.786, 0.756, 0.779, 0.765, 0.754, 0.78, 0.778, 0.787, 0.788, 0.772, 0.771, 0.785, 0.764, 0.771, 0.779, 0.789, 0.772, 0.761, 0.789, 0.78, 0.772, 0.787, 0.774, 0.757, 0.764, 0.758, 0.762, 0.77, 0.77, 0.761, 0.764, 0.788, 0.777, 0.763, 0.774, 0.753, 0.774, 0.77, 0.78, 0.788, 0.787, 0.752, 0.784, 0.775, 0.786, 0.757, 0.766, 0.77, 0.78, 0.758, 0.781, 0.771, 0.762, 0.766, 0.765, 0.752, 0.765, 0.784, 0.786, 0.753, 0.769, 0.777, 0.769, 0.79, 0.764, 0.768, 0.764, 0.757, 0.762, 0.784, 0.765, 0.75, 0.772, 0.775, 0.77, 0.787, 0.762, 0.783, 0.783, 0.783, 0.75, 0.781, 0.785
]

# SVD算法的数据
data_svd = [0.35, 0.4, 0.6, 0.54, 0.54, 0.63, 0.70, 0.42, 0.6, 0.41, 0.48, 0.45, 0.48, 0.49, 0.5, 0.48, 0.49, 0.48, 0.47, 0.47, 0.49, 0.48, 0.48, 0.5, 0.49, 0.48, 0.45, 0.47, 0.47, 0.46, 0.49, 0.47, 0.49, 0.49, 0.47, 0.45, 0.49, 0.46, 0.5, 0.45, 0.47, 0.48, 0.45, 0.48, 0.47, 0.47, 0.48, 0.46, 0.48, 0.47, 0.5, 0.47, 0.47, 0.49, 0.47, 0.49, 0.45, 0.49, 0.49, 0.49, 0.46, 0.5, 0.49, 0.49, 0.47, 0.45, 0.45, 0.48, 0.49, 0.46, 0.49, 0.45, 0.48, 0.49, 0.47, 0.49, 0.48, 0.49, 0.48, 0.46, 0.45, 0.49, 0.47, 0.48, 0.49, 0.46, 0.48, 0.49, 0.49, 0.48, 0.48, 0.48, 0.47, 0.49, 0.5, 0.48, 0.46, 0.47, 0.47, 0.45]

# NCF算法的数据
data_ncf = [0.45, 0.54, 0.46, 0.44, 0.52, 0.53, 0.51, 0.45, 0.46, 0.44, 0.49, 0.47, 0.46, 0.47, 0.46, 0.48, 0.48, 0.46, 0.47, 0.49, 0.48, 0.48, 0.45, 0.48, 0.49, 0.45, 0.45, 0.48, 0.47, 0.45, 0.48, 0.48, 0.48, 0.45, 0.48, 0.46, 0.46, 0.46, 0.46, 0.48, 0.46, 0.49, 0.47, 0.49, 0.48, 0.45, 0.46, 0.45, 0.47, 0.46, 0.47, 0.47, 0.46, 0.48, 0.47, 0.47, 0.49, 0.46, 0.48, 0.46, 0.47, 0.46, 0.47, 0.46, 0.48, 0.47, 0.49, 0.48, 0.47, 0.47, 0.47, 0.48, 0.47, 0.48, 0.46, 0.49, 0.49, 0.49, 0.45, 0.46, 0.46, 0.48, 0.49, 0.48, 0.47, 0.48, 0.47, 0.47, 0.49, 0.49, 0.49, 0.47, 0.46, 0.49, 0.47, 0.46, 0.46, 0.46, 0.46, 0.49]

# LinUCB算法的数据
data_linucb = [0.6, 0.4, 0.56, 0.65, 0.53, 0.46, 0.54, 0.55, 0.56, 0.47, 0.56, 0.56, 0.55, 0.65, 0.75, 0.70, 0.6, 0.64, 0.53, 0.56, 0.58, 0.57, 0.59, 0.59, 0.6, 0.6, 0.58, 0.55, 0.59, 0.55, 0.56, 0.57, 0.57, 0.57, 0.6, 0.58, 0.58, 0.55, 0.57, 0.55, 0.57, 0.56, 0.56, 0.58, 0.58, 0.56, 0.59, 0.57, 0.59, 0.56, 0.57, 0.58, 0.55, 0.58, 0.55, 0.59, 0.58, 0.56, 0.56, 0.59, 0.57, 0.59, 0.59, 0.6, 0.56, 0.59, 0.55, 0.6, 0.59, 0.55, 0.59, 0.59, 0.59, 0.58, 0.55, 0.59, 0.58, 0.55, 0.57, 0.58, 0.6, 0.6, 0.59, 0.56, 0.55, 0.57, 0.57, 0.57, 0.6, 0.6, 0.6, 0.6, 0.56, 0.58, 0.58, 0.57, 0.55, 0.55, 0.57, 0.59]
# ts算法的数据
data_ts = [0.6,0.53,0.6,0.55,0.53,0.42,0.46,0.65,0.66,0.56,0.59,0.60,0.63,0.41,0.57, 0.6, 0.58, 0.58, 0.6, 0.59, 0.57, 0.6, 0.6, 0.56, 0.59, 0.59, 0.55, 0.58, 0.58, 0.58, 0.57, 0.59, 0.56, 0.56, 0.57, 0.6, 0.6, 0.58, 0.58, 0.57, 0.59, 0.58, 0.6, 0.57, 0.59, 0.55, 0.56, 0.57, 0.58, 0.57, 0.6, 0.57, 0.57, 0.59, 0.58, 0.56, 0.58, 0.6, 0.59, 0.58, 0.6, 0.56, 0.58, 0.57, 0.58, 0.58, 0.58, 0.58, 0.57, 0.6, 0.59, 0.59, 0.57, 0.6, 0.56, 0.55, 0.57, 0.59, 0.57, 0.58, 0.6, 0.57, 0.57, 0.57, 0.55, 0.58, 0.56, 0.59, 0.57, 0.59, 0.58, 0.57, 0.58, 0.58, 0.6, 0.59, 0.59, 0.55, 0.56, 0.55]
# lfm算法的数据
data_lfm = [0.7,0.75,0.69,0.43,0.53,0.65,0.55,0.45,0.46,0.5,0.52, 0.49, 0.49, 0.51, 0.48, 0.5, 0.49, 0.5, 0.5, 0.49, 0.49, 0.49, 0.48, 0.49, 0.5, 0.51, 0.48, 0.51, 0.5, 0.49, 0.49, 0.51, 0.49, 0.48, 0.5, 0.49, 0.48, 0.5, 0.49, 0.49, 0.48, 0.51, 0.5, 0.51, 0.5, 0.51, 0.51, 0.5, 0.5, 0.5, 0.51, 0.51, 0.5, 0.51, 0.51, 0.49, 0.49, 0.49, 0.49, 0.51, 0.51, 0.51, 0.5, 0.49, 0.5, 0.5, 0.52, 0.5, 0.5, 0.49, 0.51, 0.5, 0.49, 0.51, 0.49, 0.5, 0.51, 0.49, 0.5, 0.51, 0.49, 0.51, 0.49, 0.49, 0.51, 0.48, 0.51, 0.49, 0.5, 0.48, 0.48, 0.51, 0.52, 0.49, 0.48, 0.52, 0.52, 0.51, 0.48, 0.48]
# 绘制曲线
plt.plot(range(1, len(data_djt_rs)+1), data_djt_rs, label='DJT-RS')
plt.plot(range(1, len(data_svd)+1), data_svd, label='SVD')
plt.plot(range(1, len(data_ncf)+1), data_ncf, label='NCF')
plt.plot(range(1, len(data_linucb)+1), data_linucb, label='LinUCB')
plt.plot(range(1, len(data_linucb)+1), data_ts, label='TS')
plt.plot(range(1, len(data_lfm)+1), data_lfm, label='LFM')
plt.ylabel('Diversity Value')
plt.xlabel('Number Of Recommended Users')
plt.title('Diversity')
plt.legend()
# 添加网格线
plt.grid(True)
plt.show()
